pipeline {
    agent any

    stages {
        stage('Check for changes'){
            when{
                not{
                    changeset "mod/src/**/**"
                }
            }
            steps{
                echo "Nothing to do. Exiting."
                exit 1
            }
        }
        stage('Build') {
            steps {
                echo 'Building..'
                 script {
                    sh 'dos2unix ./mod/pack-module.sh'
                    sh 'chmod +x ./mod/pack-module.sh'
                    sh "./mod/pack-module.sh"
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
                sh 'sudo cp ./mod/*.mod /home/zoltan/velen_server/live-server/modules;'
                discordSend description: "Copy Module to Server", footer: "Copied latest module to the server", result: currentBuild.currentResult, title: "Copied File to Server", webhookURL: params.WEBHOOK
            }
        }
        stage('Reset Server'){
            when {
                expression{
                    return params.RESET == "Yes"
                }
            }
            steps{
                discordSend description: "Reseting server early to push changes", footer: "Resetting the server", result: currentBuild.currentResult, title: "Server Reset", webhookURL: params.WEBHOOK
                sh 'export '
                sh 'chmod +x ./mod/reset-server.sh'
            }
        }
    }
    post {
        always {
            discordSend description: "Build completed.", footer: "Build results for the  module", link: env.BUILD_URL, result: currentBuild.currentResult, title: "Module Deployment Results (click to see more)", webhookURL: params.WEBHOOK
        }
        success {
            echo 'Build success'
            archiveArtifacts artifacts: 'mod/*.mod', followSymlinks: false
            sh "sudo rm -rf mod/*.mod"
        }
    }
}